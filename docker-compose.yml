version: '3.7'

networks:
  laravel-echoserver-network:
    driver: bridge

services:

  # Nginx
  web:
    image: ${APP_BASE}/web:latest
    build:
      dockerfile: dockerfile
      context: ./docker/nginx
    container_name: web
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/php-fpm.conf:/etc/nginx/php-fpm.conf
      - ./docker/nginx/server.conf:/etc/nginx/server.conf       
      - ${APP_ROOT}:${APP_WORKING_DIR}     
      - ${AAP_LOGS}/nginx/error.log:/var/log/nginx/error.log
      - ${AAP_LOGS}/nginx/access.log:/var/log/nginx/access.log
    env_file:
      - .env
    depends_on:
      - app
    networks:
      - laravel-echoserver-network

  # The Application
  app:
    image: ${APP_BASE}/app:latest
    build:
      dockerfile: dockerfile
      context: ./docker/php
    container_name: app
    user: ${APP_USER}
    volumes:
      - ${APP_ROOT}:${APP_WORKING_DIR}
      - ${AAP_LOGS}/php:/var/log
    env_file:
      - .env
    networks:
      - laravel-echoserver-network

  # The Composer
  composer:
    image: ${APP_BASE}/composer:latest
    build:
      dockerfile: dockerfile
      context: ./docker/composer
    container_name: composer
    volumes:
      - ${APP_ROOT}:${APP_WORKING_DIR}
    working_dir: ${APP_WORKING_DIR}
    depends_on:
      - app
    user: root
    entrypoint: ['composer']
    networks:
      - laravel-echoserver-network

  artisan:
    build:
      dockerfile: dockerfile
      context: ./docker/php
    container_name: artisan
    volumes:
      - ${APP_ROOT}:${APP_WORKING_DIR}:delegated
    working_dir: ${APP_WORKING_DIR}
    user: ${APP_USER}
    entrypoint: ['php', '${APP_WORKING_DIR}/artisan']
    networks:
      - laravel-echoserver-network

  # Node Container
  npm:
    image: ${APP_BASE}/node:latest
    build:
      dockerfile: dockerfile
      context: ./docker/node
    container_name: npm
    volumes:
      - ${APP_ROOT}:${APP_WORKING_DIR}
    working_dir: ${APP_WORKING_DIR}
    entrypoint: ['npm']
    networks:
      - laravel-echoserver-network

  # The redis server
  redis:
    image: ${APP_BASE}/redis:latest
    build:
      dockerfile: dockerfile
      context: ./docker/redis
    container_name: redis
    hostname: redis
    volumes:
      - ${APP_DATA}/redis:/data
    command: ["redis-server", "--appendonly", "yes"] # Redis notes : --appendonly persists the data
    networks:
      - laravel-echoserver-network

  # The redis server
  echo-server:
    image: oanhnn/laravel-echo-server
    container_name: laravel-echo-server
    volumes:
      - ${APP_ROOT}/docker/laravel-echo-server:/app
    ports:
      - "6001:6001"
    networks:
      - laravel-echoserver-network
